define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca [4 x [2 x i32]], align 16
	%l10 = alloca i32, align 4
	%l11 = alloca i32, align 4
	%l12 = alloca i32, align 4
	%l13 = alloca i32*, align 4
	%l14 = alloca i32, align 4
	%l15 = alloca i32, align 4
	%l16 = alloca i32, align 4
	%l17 = alloca i32*, align 4
	%l18 = alloca i32, align 4
	%l19 = alloca i32, align 4
	%l2 = alloca [4 x [2 x i32]], align 16
	%l20 = alloca i32, align 4
	%l21 = alloca i32*, align 4
	%l22 = alloca i32, align 4
	%l23 = alloca i32, align 4
	%l24 = alloca i32, align 4
	%l25 = alloca i32*, align 4
	%l26 = alloca i32, align 4
	%l27 = alloca i32, align 4
	%l28 = alloca i32, align 4
	%l29 = alloca i32*, align 4
	%l3 = alloca [4 x [2 x i32]], align 16
	%l30 = alloca i32, align 4
	%l31 = alloca i32, align 4
	%l32 = alloca i32, align 4
	%l33 = alloca i32*, align 4
	%l34 = alloca i32, align 4
	%l35 = alloca i32, align 4
	%l36 = alloca i32, align 4
	%l37 = alloca i32*, align 4
	%l38 = alloca i32, align 4
	%l39 = alloca i32, align 4
	%l4 = alloca [4 x [2 x i32]], align 16
	%l40 = alloca i32, align 4
	%l41 = alloca i32*, align 4
	%l42 = alloca i32, align 4
	%l43 = alloca i32, align 4
	%l44 = alloca i32, align 4
	%l45 = alloca i32*, align 4
	%l46 = alloca i32, align 4
	%l47 = alloca i32, align 4
	%l48 = alloca i32, align 4
	%l49 = alloca i32*, align 4
	%l5 = alloca [4 x [2 x i32]], align 16
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32*, align 4
	%t50 = mul nsw i32 2, 2
	store i32 %t50, i32* %l6, align 4
	%t97 = load i32, i32* %l6, align 4
	%t51 = add nsw i32 %t97, 0
	store i32 %t51, i32* %l7, align 4
	%t98 = load i32, i32* %l7, align 4
	%t52 = mul nsw i32 %t98, 4
	store i32 %t52, i32* %l8, align 4
	%t99 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %l1, i64 0, i64 0, i64 0
	%t100 = load i32, i32* %l8, align 4
	%t101 = bitcast i32* %t99 to i8*
	%t103 = sext i32 %t100 to i64
	%t102 = getelementptr inbounds i8, i8* %t101, i64 %t103
	%t53 = bitcast i8* %t102 to i32*
	store i32* %t53, i32** %l9, align 4
	%t104 = load i32*, i32** %l9, align 4
	store i32 1, i32* %t104, align 4
	%t54 = mul nsw i32 2, 2
	store i32 %t54, i32* %l10, align 4
	%t105 = load i32, i32* %l10, align 4
	%t55 = add nsw i32 %t105, 0
	store i32 %t55, i32* %l11, align 4
	%t106 = load i32, i32* %l11, align 4
	%t56 = mul nsw i32 %t106, 4
	store i32 %t56, i32* %l12, align 4
	%t107 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %l2, i64 0, i64 0, i64 0
	%t108 = load i32, i32* %l12, align 4
	%t109 = bitcast i32* %t107 to i8*
	%t111 = sext i32 %t108 to i64
	%t110 = getelementptr inbounds i8, i8* %t109, i64 %t111
	%t57 = bitcast i8* %t110 to i32*
	store i32* %t57, i32** %l13, align 4
	%t112 = load i32*, i32** %l13, align 4
	store i32 11, i32* %t112, align 4
	%t58 = mul nsw i32 2, 2
	store i32 %t58, i32* %l14, align 4
	%t113 = load i32, i32* %l14, align 4
	%t59 = add nsw i32 %t113, 0
	store i32 %t59, i32* %l15, align 4
	%t114 = load i32, i32* %l15, align 4
	%t60 = mul nsw i32 %t114, 4
	store i32 %t60, i32* %l16, align 4
	%t115 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %l3, i64 0, i64 0, i64 0
	%t116 = load i32, i32* %l16, align 4
	%t117 = bitcast i32* %t115 to i8*
	%t119 = sext i32 %t116 to i64
	%t118 = getelementptr inbounds i8, i8* %t117, i64 %t119
	%t61 = bitcast i8* %t118 to i32*
	store i32* %t61, i32** %l17, align 4
	%t120 = load i32*, i32** %l17, align 4
	store i32 22, i32* %t120, align 4
	%t62 = mul nsw i32 2, 2
	store i32 %t62, i32* %l18, align 4
	%t121 = load i32, i32* %l18, align 4
	%t63 = add nsw i32 %t121, 0
	store i32 %t63, i32* %l19, align 4
	%t122 = load i32, i32* %l19, align 4
	%t64 = mul nsw i32 %t122, 4
	store i32 %t64, i32* %l20, align 4
	%t123 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %l4, i64 0, i64 0, i64 0
	%t124 = load i32, i32* %l20, align 4
	%t125 = bitcast i32* %t123 to i8*
	%t127 = sext i32 %t124 to i64
	%t126 = getelementptr inbounds i8, i8* %t125, i64 %t127
	%t65 = bitcast i8* %t126 to i32*
	store i32* %t65, i32** %l21, align 4
	%t128 = load i32*, i32** %l21, ali