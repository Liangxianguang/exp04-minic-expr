@parent = global [1005 x i32] zeroinitializer, align 16
define i32 @find(i32 %t0) {
	%l1 = alloca i32, align 4
	%l10 = alloca i32*, align 4
	%l11 = alloca i32, align 4
	%l12 = alloca i32, align 4
	%l13 = alloca i32, align 4
	%l14 = alloca i32*, align 4
	%l15 = alloca i32, align 4
	%l16 = alloca i32, align 4
	%l17 = alloca i32, align 4
	%l18 = alloca i32*, align 4
	%l19 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32*, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i1, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	%t30 = load i32, i32* %l1, align 4
	store i32 %t30, i32* %l3, align 4
	%t31 = load i32, i32* %l3, align 4
	%t20 = mul nsw i32 %t31, 4
	store i32 %t20, i32* %l4, align 4
	%t32 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t33 = load i32, i32* %l4, align 4
	%t34 = bitcast i32* %t32 to i8*
	%t36 = sext i32 %t33 to i64
	%t35 = getelementptr inbounds i8, i8* %t34, i64 %t36
	%t21 = bitcast i8* %t35 to i32*
	store i32* %t21, i32** %l5, align 4
	%t37 = load i32*, i32** %l5, align 4
	%t38 = load i32, i32* %t37, align 4
	store i32 %t38, i32* %l6, align 4
	%t39 = load i32, i32* %l6, align 4
	%t40 = load i32, i32* %l1, align 4
	%t22 = icmp eq i32 %t39, %t40
	store i1 %t22, i1* %l7, align 4
	%t41 = load i1, i1* %l7, align 4
	br i1 %t41, label %.L23, label %.L24
.L23:
	%t42 = load i32, i32* %l1, align 4
	store i32 %t42, i32* %l2, align 4
	br label %.L33
.L24:
	%t43 = load i32, i32* %l1, align 4
	store i32 %t43, i32* %l8, align 4
	%t44 = load i32, i32* %l8, align 4
	%t23 = mul nsw i32 %t44, 4
	store i32 %t23, i32* %l9, align 4
	%t45 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t46 = load i32, i32* %l9, align 4
	%t47 = bitcast i32* %t45 to i8*
	%t49 = sext i32 %t46 to i64
	%t48 = getelementptr inbounds i8, i8* %t47, i64 %t49
	%t24 = bitcast i8* %t48 to i32*
	store i32* %t24, i32** %l10, align 4
	%t50 = load i32*, i32** %l10, align 4
	%t51 = load i32, i32* %t50, align 4
	store i32 %t51, i32* %l11, align 4
	%t52 = load i32, i32* %l11, align 4
	%t25 = call i32 @find(i32 %t52)
	%t53 = load i32, i32* %l1, align 4
	store i32 %t53, i32* %l12, align 4
	%t54 = load i32, i32* %l12, align 4
	%t26 = mul nsw i32 %t54, 4
	store i32 %t26, i32* %l13, align 4
	%t55 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t56 = load i32, i32* %l13, align 4
	%t57 = bitcast i32* %t55 to i8*
	%t59 = sext i32 %t56 to i64
	%t58 = getelementptr inbounds i8, i8* %t57, i64 %t59
	%t27 = bitcast i8* %t58 to i32*
	store i32* %t27, i32** %l14, align 4
	%t60 = load i32*, i32** %l14, align 4
	%t61 = load i32, i32* %t60, align 4
	store i32 %t61, i32* %l15, align 4
	%t62 = load i32*, i32** %l14, align 4
	store i32 %t25, i32* %t62, align 4
	%t63 = load i32, i32* %l1, align 4
	store i32 %t63, i32* %l16, align 4
	%t64 = load i32, i32* %l16, align 4
	%t28 = mul nsw i32 %t64, 4
	store i32 %t28, i32* %l17, align 4
	%t65 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t66 = load i32, i32* %l17, align 4
	%t67 = bitcast i32* %t65 to i8*
	%t69 = sext i32 %t66 to i64
	%t68 = getelementptr inbounds i8, i8* %t67, i64 %t69
	%t29 = bitcast i8* %t68 to i32*
	store i32* %t29, i32** %l18, align 4
	%t70 = load i32*, i32** %l18, align 4
	%t71 = load i32, i32* %t70, align 4
	store i32 %t71, i32* %l19, align 4
	%t72 = load i32, i32* %l19, align 4
	store i32 %t72, i32* %l2, align 4
	br label %.L33
.L33:
	%t73 = load i32, i32* %l2, align 4
	ret i32 %t73
}
define void @merge(i32 %t0, i32 %t1) {
	%l10 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i1, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32*, align 4
	store i32 %t0, i32* %l2, align 4
	store i32 %t1, i32* %l3, align 4
	store i32 0, i32* %l4, align 4
	store i32 0, i32* %l5, align 4
	%t16 = load i32, i32* %l2, align 4
	%t11 = call i32 @find(i32 %t16)
	store i32 %t11, i32* %l4, align 4
	%t17 = load i32, i32* %l3, align 4
	%t12 = call i32 @find(i32 %t17)
	store i32 %t12, i32* %l5, align 4
	%t18 = load i32, i32* %l4, align 4
	%t19 = load i32, i32* %l5, align 4
	%t13 = icmp ne i32 %t18, %t19
	store i1 %t13, i1* %l6, align 4
	%t20 = load i1, i1* %l6, align 4
	br i1 %t20, label %.L14, label %.L18
.L14:
	%t21 = load i32, i32* %l5, align 4
	store i32 %t21, i32* %l7, align 4
	%t22 = load i32, i32* %l7, align 4
	%t14 = mul nsw i32 %t22, 4
	store i32 %t14, i32* %l8, align 4
	%t23 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t24 = load i32, i32* %l8, align 4
	%t25 = bitcast i32* %t23 to i8*
	%t27 = sext i32 %t24 to i64
	%t26 = getelementptr inbounds i8, i8* %t25, i64 %t27
	%t15 = bitcast i8* %t26 to i32*
	store i32* %t15, i32** %l9, align 4
	%t28 = load i32*, i32** %l9, align 4
	%t29 = load i32, i32* %t28, align 4
	store i32 %t29, i32* %l10, align 4
	%t30 = load i32, i32* %l4, align 4
	%t31 = load i32*, i32** %l9, align 4
	store i32 %t30, i32* %t31, align 4
	br label %.L18
.L18:
	ret void
}
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l10 = alloca i32, align 4
	%l11 = alloca i1, align 4
	%l12 = alloca i32, align 4
	%l13 = alloca i1, align 4
	%l14 = alloca i32, align 4
	%l15 = alloca i32, align 4
	%l16 = alloca i32*, align 4
	%l17 = alloca i32, align 4
	%l18 = alloca i1, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i1, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32*, align 4
	store i32 0, i32* %l1, align 4
	store i32 0, i32* %l2, align 4
	store i32 0, i32* %l3, align 4
	%t19 = call i32 (...) @getint()
	store i32 %t19, i32* %l1, align 4
	%t20 = call i32 (...) @getint()
	store i32 %t20, i32* %l2, align 4
	store i32 0, i32* %l4, align 4
	store i32 0, i32* %l5, align 4
	store i32 0, i32* %l3, align 4
	br label %.L21
.L21:
	%t35 = load i32, i32* %l3, align 4
	%t36 = load i32, i32* %l1, align 4
	%t21 = icmp slt i32 %t35, %t36
	store i1 %t21, i1* %l6, align 4
	%t37 = load i1, i1* %l6, align 4
	br i1 %t37, label %.L23, label %.L27
.L23:
	%t38 = load i32, i32* %l3, align 4
	store i32 %t38, i32* %l7, align 4
	%t39 = load i32, i32* %l7, align 4
	%t22 = mul nsw i32 %t39, 4
	store i32 %t22, i32* %l8, align 4
	%t40 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t41 = load i32, i32* %l8, align 4
	%t42 = bitcast i32* %t40 to i8*
	%t44 = sext i32 %t41 to i64
	%t43 = getelementptr inbounds i8, i8* %t42, i64 %t44
	%t23 = bitcast i8* %t43 to i32*
	store i32* %t23, i32** %l9, align 4
	%t45 = load i32*, i32** %l9, align 4
	%t46 = load i32, i32* %t45, align 4
	store i32 %t46, i32* %l10, align 4
	%t47 = load i32, i32* %l3, align 4
	%t48 = load i32*, i32** %l9, align 4
	store i32 %t47, i32* %t48, align 4
	%t49 = load i32, i32* %l3, align 4
	%t24 = add nsw i32 %t49, 1
	store i32 %t24, i32* %l3, align 4
	br label %.L21
.L27:
	store i32 0, i32* %l3, align 4
	br label %.L28
.L28:
	%t50 = load i32, i32* %l3, align 4
	%t51 = load i32, i32* %l2, align 4
	%t25 = icmp slt i32 %t50, %t51
	store i1 %t25, i1* %l11, align 4
	%t52 = load i1, i1* %l11, align 4
	br i1 %t52, label %.L30, label %.L34
.L30:
	%t26 = call i32 (...) @getint()
	store i32 %t26, i32* %l4, align 4
	%t27 = call i32 (...) @getint()
	store i32 %t27, i32* %l5, align 4
	%t53 = load i32, i32* %l4, align 4
	%t54 = load i32, i32* %l5, align 4
	call void @merge(i32 %t53, i32 %t54)
	%t55 = load i32, i32* %l3, align 4
	%t28 = add nsw i32 %t55, 1
	store i32 %t28, i32* %l3, align 4
	br label %.L28
.L34:
	store i32 0, i32* %l12, align 4
	store i32 0, i32* %l3, align 4
	br label %.L35
.L35:
	%t56 = load i32, i32* %l3, align 4
	%t57 = load i32, i32* %l1, align 4
	%t29 = icmp slt i32 %t56, %t57
	store i1 %t29, i1* %l13, align 4
	%t58 = load i1, i1* %l13, align 4
	br i1 %t58, label %.L37, label %.L45
.L37:
	%t59 = load i32, i32* %l3, align 4
	store i32 %t59, i32* %l14, align 4
	%t60 = load i32, i32* %l14, align 4
	%t30 = mul nsw i32 %t60, 4
	store i32 %t30, i32* %l15, align 4
	%t61 = getelementptr inbounds [1005 x i32], [1005 x i32]* @parent, i64 0, i64 0
	%t62 = load i32, i32* %l15, align 4
	%t63 = bitcast i32* %t61 to i8*
	%t65 = sext i32 %t62 to i64
	%t64 = getelementptr inbounds i8, i8* %t63, i64 %t65
	%t31 = bitcast i8* %t64 to i32*
	store i32* %t31, i32** %l16, align 4
	%t66 = load i32*, i32** %l16, align 4
	%t67 = load i32, i32* %t66, align 4
	store i32 %t67, i32* %l17, align 4
	%t68 = load i32, i32* %l17, align 4
	%t69 = load i32, i32* %l3, align 4
	%t32 = icmp eq i32 %t68, %t69
	store i1 %t32, i1* %l18, align 4
	%t70 = load i1, i1* %l18, align 4
	br i1 %t70, label %.L41, label %.L43
.L41:
	%t71 = load i32, i32* %l12, align 4
	%t33 = add nsw i32 %t71, 1
	store i32 %t33, i32* %l12, align 4
	br label %.L43
.L43:
	%t72 = load i32, i32* %l3, align 4
	%t34 = add nsw i32 %t72, 1
	store i32 %t34, i32* %l3, align 4
	br label %.L35
.L45:
	%t73 = load i32, i32* %l12, align 4
	call void @putint(i32 %t73)
	store i32 0, i32* %l0, align 4
	%t74 = load i32, i32* %l0, align 4
	ret i32 %t74
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
